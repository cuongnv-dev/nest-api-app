// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  email          String   @unique
  phoneNumber    String   @unique
  hashedPassword String
  fullName       String
  avatarUrl      String?
  role           UserRole
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  notes          Note[]
  tags           Tag[]
  plans          Plan[]
}

model Tag {
  id        Int       @id @default(autoincrement())
  name      String
  icon      String?
  group     GroupTag
  isDefault Boolean   @default(false)
  createdBy User      @relation(fields: [userId], references: [id])
  activeFlg Boolean   @default(true)
  deleteFlg Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  plans     TagPlan[]
  userId    Int
}

model Plan {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  saveAmount  Int?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  tags        TagPlan[]
  User        User?     @relation(fields: [userId], references: [id])
  userId      Int?
}

model TagPlan {
  id        Int      @id @default(autoincrement())
  value     Int
  tagId     Int
  tag       Tag      @relation(fields: [tagId], references: [id])
  planId    Int
  plan      Plan     @relation(fields: [planId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Note {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  url         String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  userId      Int?
  user        User?    @relation(fields: [userId], references: [id])
}

enum GroupTag {
  LOAN
  REVENUE
  EXPENSES
}

enum UserRole {
  admin
  user
}
